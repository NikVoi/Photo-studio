/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/assets/js/app.js":
/*!******************************!*\
  !*** ./src/assets/js/app.js ***!
  \******************************/
/***/ (function() {

eval("const mainPopUp = document.querySelector(\".popUp\");\r\n\r\n\r\n// open mobile menu\r\n\r\nconst   menu = document.querySelector(\".menu\"),\r\n        button = document.querySelector(\".header__mobile\");\r\n\r\nbutton.addEventListener(\"click\", () =>{\r\n    if (menu.classList.toggle(\"active\")){\r\n        menu.classList.add('active');\r\n        // body.classList.add('noscroll');\r\n    }else{\r\n        menu.classList.remove('active');\r\n        // body.classList.remove('noscroll');\r\n    }\r\n})\r\n\r\n\r\n// Open block about \r\n\r\nconst buttonOpen = document.querySelectorAll(\".button__open\");\r\n\r\nbuttonOpen.forEach(elem => {\r\n    elem.addEventListener(\"click\", () => {\r\n            console.log( );\r\n            if (elem.classList.toggle('active')){\r\n                elem.classList.add('active')\r\n                elem.parentElement.parentElement.classList.add('active')\r\n            }\r\n            else {\r\n                elem.classList.remove('active')\r\n                elem.parentElement.parentElement.classList.remove('active')\r\n            }\r\n        }\r\n    )\r\n});\r\n\r\n//##############################\r\n//##### Form back call #########\r\n//##############################\r\n\r\nconst   formButton = document.querySelectorAll(\".from-back-call\"),\r\n        backForm = document.querySelector(\".popUp__form\"),\r\n        graduateButton = document.querySelector(\".form__gratitude\"),\r\n        graduateform = document.querySelector(\".popUp__gratitude\")\r\n\r\nformButton.forEach(elem => {\r\n    elem.addEventListener(\"click\", () => {\r\n        mainPopUp.classList.add(\"active\")\r\n        backForm.classList.add(\"active\")\r\n    })\r\n})\r\n\r\ngraduateButton.addEventListener(\"click\", () => {\r\n    backForm.classList.remove(\"active\")\r\n    graduateform.classList.add(\"active\")\r\n})\r\n\r\n//###############################\r\n//####### Slider location #######\r\n//###############################\r\n\r\nconst   locationButtonNext = document.querySelector(\"#swiper-button-location-next\"),\r\n        locationButtonPrev = document.querySelector(\"#swiper-button-location-prev\"),\r\n        locationNav = document.querySelector(\".location__nav\"),\r\n        windowWidth = document.documentElement.clientWidth;\r\n        \r\n        let move = 0;\r\n\r\n        const doSwipe = (locationNav, move) => { \r\n            locationNav.style.left = -move + 'px';\r\n        }\r\n\r\n        const swiperLocation = (wrapper, moveStep, moveStepMax, buttonNext, buttonPrev) => {\r\n\r\n            let move = 0;\r\n\r\n            buttonNext.addEventListener('click', () => {\r\n                move += moveStep;\r\n                \r\n                if(move > moveStepMax){\r\n                    move = 0;\r\n                }\r\n            \r\n                doSwipe(wrapper, move);\r\n            });\r\n\r\n            buttonPrev.addEventListener('click', () => {\r\n                move -= moveStep;\r\n            \r\n                if(move < 0){\r\n                    move = moveStepMax;\r\n                }\r\n               \r\n                doSwipe(wrapper, move);\r\n            });\r\n        }\r\n\r\n        swiperLocation(locationNav, 421, 842, locationButtonNext, locationButtonPrev)\r\n\r\n        if (windowWidth <= 1240){\r\n            swiperLocation(locationNav, 285, 570, locationButtonNext, locationButtonPrev)\r\n        }\r\n        if (windowWidth <= 892) {\r\n            swiperLocation(locationNav, 350, 1400, locationButtonNext, locationButtonPrev)\r\n        }\r\n        \r\n        \r\n//##############################\r\n//####### Slider comment #######\r\n//##############################\r\n\r\nconst   reviewsButtonNext = document.querySelector(\"#swiper-button-reviews-next\"),\r\n        reviewsButtonPrev = document.querySelector(\"#swiper-button-reviews-prev\"),\r\n        reviewsNav = document.querySelector(\".reviews__slider-wrapper\");\r\n\r\n        console.log(reviewsNav);\r\n        \r\n        const swiperReviews = (wrapper, moveStep, moveStepMax, buttonNext, buttonPrev) => {\r\n            let move = 0;\r\n\r\n            buttonNext.addEventListener('click', () => {\r\n                move += moveStep;\r\n                \r\n                if(move > moveStepMax){\r\n                    move = 0;\r\n                }\r\n\r\n                wrapper.classList.add(\"slide-move-right\")\r\n                \r\n                wrapper.addEventListener(\"animationend\", () =>{\r\n                    wrapper.classList.remove(\"slide-move-right\")\r\n                })\r\n            \r\n                doSwipe(wrapper, move);\r\n            });\r\n\r\n            buttonPrev.addEventListener('click', () => {\r\n                move -= moveStep;\r\n            \r\n                if(move < 0){\r\n                    move = moveStepMax;\r\n                }\r\n\r\n                wrapper.classList.add(\"slide-move-left\")\r\n                \r\n                wrapper.addEventListener(\"animationend\", () =>{\r\n                    wrapper.classList.remove(\"slide-move-left\")\r\n                })\r\n               \r\n                doSwipe(wrapper, move);\r\n            });\r\n\r\n        }\r\n\r\n        // console.log(reviewsNav.children[0].children[0].classList.add(\"slide-move-left\"));\r\n\r\n        swiperReviews(reviewsNav, 1040, 1041, reviewsButtonNext, reviewsButtonPrev)\r\n\r\n        if (windowWidth <= 1240){\r\n            swiperReviews(reviewsNav, 720, 1450, reviewsButtonNext, reviewsButtonPrev)\r\n        }\r\n        if (windowWidth <= 892) {\r\n            swiperReviews(reviewsNav, 360, 1800, reviewsButtonNext, reviewsButtonPrev)\r\n        }\r\n\r\n\r\n//##############################\r\n//######## Close modal #########\r\n//##############################\r\n\r\nconst mainClose = document.querySelectorAll(\".popUp__close\")\r\n\r\nconst closeModal = () => {\r\n    mainClose.forEach(elem => {\r\n        elem.addEventListener(\"click\", () => {\r\n            mainPopUp.classList.remove(\"active\")\r\n            openPopUpPhoto.classList.remove(\"active\")\r\n            backForm.classList.remove(\"active\")\r\n            graduateform.classList.remove(\"active\")\r\n        })\r\n    })\r\n}\r\n\r\ncloseModal()\r\n\r\n//##############################\r\n//#### Click on button card ####\r\n//##############################\r\n\r\nconst   numberPhoto = document.querySelectorAll(\".card__col\"),\r\n        activebuttonFirst = document.querySelectorAll(\".card__action_first\"),\r\n        openPopUpPhoto = document.querySelector(\".popUp__price\"),\r\n        photoInput = document.querySelector(\"#pricePhoto\"),\r\n        activeButtonsNumberPhoto = document.querySelectorAll(\".card__action-col\"),\r\n        makeupArtist = document.querySelectorAll(\".makeup-artist\"),\r\n        firstCard = document.querySelector(\".card__mini\"),\r\n        secondCard = document.querySelector(\".card__standart\"),\r\n        thirdCard = document.querySelector(\".card__maxi\"),\r\n        buttonSave = document.querySelector(\".button-save\")\r\n\r\n\r\nphotoInput.oninput = function() {\r\n    this.value = this.value.substr(0, 4);\r\n}                           \r\n\r\nconst sumPrice = (card, button, buttonSecond) => {\r\n    \r\n    button.addEventListener(\"click\", () => {\r\n        let priceNumber = card.children[1].children[0].innerHTML\r\n       \r\n        button.classList.toggle(\"active\")\r\n        \r\n        if (button.classList.contains(\"active\")) {\r\n            priceNumber = Number(priceNumber) + 2000\r\n            \r\n            card.children[1].children[0].innerHTML = priceNumber\r\n        } else if (!button.classList.contains(\"active\")) {\r\n            priceNumber = Number(priceNumber) - 2000\r\n            \r\n            card.children[1].children[0].innerHTML = priceNumber\r\n        }\r\n        \r\n    })\r\n    \r\n    buttonSecond.addEventListener(\"click\", () => {\r\n        buttonSecond.classList.toggle(\"active\")\r\n    })  \r\n\r\n}\r\n\r\nlet priceMini = firstCard.children[1].children[0].innerHTML,\r\n    priceStandart = secondCard.children[1].children[0].innerHTML,\r\n    priceMaxi = thirdCard.children[1].children[0].innerHTML;\r\n\r\nconst sumPricePhoto = (card, buttonModal, numberPhoto, priceStart, artist) => {\r\n    function close(mainPopUp, openPopUpPhoto) {\r\n        mainPopUp.classList.remove(\"active\")\r\n        openPopUpPhoto.classList.remove(\"active\")\r\n    }\r\n    \r\n    buttonModal.addEventListener(\"click\", () => {\r\n        photoInput.value = \"\"\r\n        \r\n        let priceStatic = card.children[1].children[0].innerHTML;\r\n        let finalPrice = 0;\r\n\r\n        mainPopUp.classList.add(\"active\")\r\n        openPopUpPhoto.classList.add(\"active\")\r\n\r\n        buttonSave.addEventListener(\"click\", () => {\r\n\r\n            finalPrice = Number(priceStart) + 250 * photoInput.value\r\n            buttonModal.classList.add(\"active\")\r\n\r\n            card.children[1].children[0].innerHTML = finalPrice\r\n            numberPhoto.innerHTML = photoInput.value\r\n\r\n            close(mainPopUp, openPopUpPhoto)\r\n            \r\n            if (buttonModal.classList.contains(\"active\") && Number(photoInput.value) === 1 && artist.classList.contains(\"active\")) {\r\n                buttonModal.classList.remove(\"active\")\r\n\r\n                card.children[1].children[0].innerHTML = Number(priceStart) + 2000\r\n                numberPhoto.innerHTML = photoInput.value\r\n\r\n                close(mainPopUp, openPopUpPhoto)\r\n            } else if (buttonModal.classList.contains(\"active\") && Number(photoInput.value) === 1 && !artist.classList.contains(\"active\")){\r\n                buttonModal.classList.remove(\"active\")\r\n\r\n                card.children[1].children[0].innerHTML = priceStart\r\n                numberPhoto.innerHTML = photoInput.value\r\n\r\n                close(mainPopUp, openPopUpPhoto)\r\n            }\r\n        })\r\n    }) \r\n}\r\n\r\nconst sumPricePhotoMaxi = (card, buttonModal, numberPhoto, priceStart) => {\r\n    function close(mainPopUp, openPopUpPhoto) {\r\n        mainPopUp.classList.remove(\"active\")\r\n        openPopUpPhoto.classList.remove(\"active\")\r\n    }\r\n    \r\n    buttonModal.addEventListener(\"click\", () => {\r\n        photoInput.value = \"\"\r\n        \r\n        let priceStatic = card.children[1].children[0].innerHTML;\r\n        let finalPrice = 0;\r\n\r\n        mainPopUp.classList.add(\"active\")\r\n        openPopUpPhoto.classList.add(\"active\")\r\n\r\n        buttonSave.addEventListener(\"click\", () => {\r\n\r\n            finalPrice = 0 + 250 * photoInput.value\r\n            buttonModal.classList.add(\"active\")\r\n\r\n            card.children[1].children[0].innerHTML = finalPrice\r\n            numberPhoto.innerHTML = photoInput.value\r\n\r\n            close(mainPopUp, openPopUpPhoto)\r\n\r\n            if (buttonModal.classList.contains(\"active\") && Number(photoInput.value) === 1) {\r\n                buttonModal.classList.remove(\"active\")\r\n\r\n                card.children[1].children[0].innerHTML = priceStart\r\n                numberPhoto.innerHTML = photoInput.value\r\n\r\n                close(mainPopUp, openPopUpPhoto)\r\n            }\r\n        })\r\n    }) \r\n}\r\nsumPrice(firstCard, makeupArtist[0], activebuttonFirst[0])\r\nsumPrice(secondCard, makeupArtist[1], activebuttonFirst[1])\r\n\r\nsumPricePhoto(firstCard, activeButtonsNumberPhoto[0], numberPhoto[0], priceMini, makeupArtist[0])\r\nsumPricePhoto(secondCard, activeButtonsNumberPhoto[1], numberPhoto[1], priceStandart, makeupArtist[1])\r\nsumPricePhotoMaxi(thirdCard, activeButtonsNumberPhoto[2], numberPhoto[2], priceMaxi)\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://brainscloud/./src/assets/js/app.js?");

/***/ }),

/***/ "./src/assets/js/file2.js":
/*!********************************!*\
  !*** ./src/assets/js/file2.js ***!
  \********************************/
/***/ (function() {

eval("console.log('file 2');\r\n\n\n//# sourceURL=webpack://brainscloud/./src/assets/js/file2.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_modules__["./src/assets/js/app.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/assets/js/file2.js"]();
/******/ 	
/******/ })()
;